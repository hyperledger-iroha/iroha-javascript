{
    "_VersionedEventSocketMessageV1": "EventSocketMessage",
    "_VersionedQueryResultV1": "QueryResult",
    "_VersionedRejectedTransactionV1": "RejectedTransaction",
    "_VersionedSignedQueryRequestV1": "SignedQueryRequest",
    "_VersionedTransactionV1": "Transaction",
    "Account": {
        "id": "AccountId",
        "assets": "BTreeMap<AssetId,Asset>",
        "signatories": "Vec<PublicKey>",
        "permissionTokens": "BTreeSet<PermissionToken>",
        "signatureCheckCondition": "SignatureCheckCondition",
        "metadata": "Metadata"
    },
    "AccountId": {
        "name": "Text",
        "domainName": "Text"
    },
    "Add": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "And": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Asset": {
        "id": "AssetId",
        "value": "AssetValue"
    },
    "AssetDefinition": {
        "valueType": "AssetValueType",
        "id": "DefinitionId"
    },
    "AssetDefinitionEntry": {
        "definition": "AssetDefinition",
        "registeredBy": "AccountId"
    },
    "AssetId": {
        "definitionId": "DefinitionId",
        "accountId": "AccountId"
    },
    "AssetValue": {
        "_enum": {
            "Quantity": "u32",
            "BigQuantity": "u128",
            "Store": "Metadata"
        }
    },
    "AssetValueType": {
        "_enum": {
            "Quantity": null,
            "BigQuantity": null,
            "Store": null
        }
    },
    "BlockRejectionReason": {
        "_enum": {
            "ConsensusBlockRejection": null
        }
    },
    "BurnBox": {
        "object": "EvaluatesTo",
        "destinationId": "EvaluatesTo"
    },
    "Contains": {
        "collection": "EvaluatesTo",
        "element": "EvaluatesTo"
    },
    "ContainsAll": {
        "collection": "EvaluatesTo",
        "elements": "EvaluatesTo"
    },
    "ContainsAny": {
        "collection": "EvaluatesTo",
        "elements": "EvaluatesTo"
    },
    "ContextValue": {
        "valueName": "Text"
    },
    "DataEvent": "()",
    "DataEventFilter": "()",
    "DefinitionId": {
        "name": "Text",
        "domainName": "Text"
    },
    "Divide": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Domain": {
        "name": "Text",
        "accounts": "BTreeMap<AccountId,Account>",
        "assetDefinitions": "BTreeMap<DefinitionId,AssetDefinitionEntry>"
    },
    "EntityType": {
        "_enum": {
            "Block": null,
            "Transaction": null
        }
    },
    "Equal": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "EvaluatesTo": {
        "expression": "Expression"
    },
    "Event": {
        "_enum": {
            "Pipeline": "PipelineEvent",
            "Data": "DataEvent"
        }
    },
    "EventFilter": {
        "_enum": {
            "Pipeline": "PipelineEventFilter",
            "Data": "DataEventFilter"
        }
    },
    "EventSocketMessage": {
        "_enum": {
            "SubscriptionRequest": "SubscriptionRequest",
            "SubscriptionAccepted": null,
            "Event": "Event",
            "EventReceived": null
        }
    },
    "Expression": {
        "_enum": {
            "Add": "Add",
            "Subtract": "Subtract",
            "Multiply": "Multiply",
            "Divide": "Divide",
            "Mod": "Mod",
            "RaiseTo": "RaiseTo",
            "Greater": "Greater",
            "Less": "Less",
            "Equal": "Equal",
            "Not": "Not",
            "And": "And",
            "Or": "Or",
            "If": "IfExpression",
            "Raw": "Value",
            "Query": "QueryBox",
            "Contains": "Contains",
            "ContainsAll": "ContainsAll",
            "ContainsAny": "ContainsAny",
            "Where": "Where",
            "ContextValue": "ContextValue"
        }
    },
    "FailBox": {
        "message": "Text"
    },
    "FindAccountById": {
        "id": "EvaluatesTo"
    },
    "FindAccountKeyValueByIdAndKey": {
        "id": "EvaluatesTo",
        "key": "EvaluatesTo"
    },
    "FindAccountsByDomainName": {
        "domainName": "EvaluatesTo"
    },
    "FindAccountsByName": {
        "name": "EvaluatesTo"
    },
    "FindAllAccounts": {},
    "FindAllAssets": {},
    "FindAllAssetsDefinitions": {},
    "FindAllDomains": {},
    "FindAllPeers": {},
    "FindAssetById": {
        "id": "EvaluatesTo"
    },
    "FindAssetKeyValueByIdAndKey": {
        "id": "EvaluatesTo",
        "key": "EvaluatesTo"
    },
    "FindAssetQuantityById": {
        "id": "EvaluatesTo"
    },
    "FindAssetsByAccountId": {
        "accountId": "EvaluatesTo"
    },
    "FindAssetsByAccountIdAndAssetDefinitionId": {
        "accountId": "EvaluatesTo",
        "assetDefinitionId": "EvaluatesTo"
    },
    "FindAssetsByAssetDefinitionId": {
        "assetDefinitionId": "EvaluatesTo"
    },
    "FindAssetsByDomainName": {
        "domainName": "EvaluatesTo"
    },
    "FindAssetsByDomainNameAndAssetDefinitionId": {
        "domainName": "EvaluatesTo",
        "assetDefinitionId": "EvaluatesTo"
    },
    "FindAssetsByName": {
        "name": "EvaluatesTo"
    },
    "FindDomainByName": {
        "name": "EvaluatesTo"
    },
    "FindPermissionTokensByAccountId": {
        "id": "EvaluatesTo"
    },
    "FindTransactionsByAccountId": {
        "accountId": "EvaluatesTo"
    },
    "GrantBox": {
        "object": "EvaluatesTo",
        "destinationId": "EvaluatesTo"
    },
    "Greater": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Hash": "[u8;32]",
    "IdBox": {
        "_enum": {
            "AccountId": "AccountId",
            "AssetId": "AssetId",
            "AssetDefinitionId": "DefinitionId",
            "DomainName": "Text",
            "PeerId": "PeerId",
            "WorldId": null
        }
    },
    "IdentifiableBox": {
        "_enum": {
            "Account": "Account",
            "NewAccount": "NewAccount",
            "Asset": "Asset",
            "AssetDefinition": "AssetDefinition",
            "Domain": "Domain",
            "Peer": "Peer",
            "World": null
        }
    },
    "IfExpression": {
        "condition": "EvaluatesTo",
        "thenExpression": "EvaluatesTo",
        "elseExpression": "EvaluatesTo"
    },
    "IfInstruction": {
        "condition": "EvaluatesTo",
        "then": "Instruction",
        "otherwise": "Option<Instruction>"
    },
    "Instruction": {
        "_enum": {
            "Register": "RegisterBox",
            "Unregister": "UnregisterBox",
            "Mint": "MintBox",
            "Burn": "BurnBox",
            "Transfer": "TransferBox",
            "If": "IfInstruction",
            "Pair": "Pair",
            "Sequence": "SequenceBox",
            "Fail": "FailBox",
            "SetKeyValue": "SetKeyValueBox",
            "RemoveKeyValue": "RemoveKeyValueBox",
            "Grant": "GrantBox"
        }
    },
    "InstructionExecutionFail": {
        "instruction": "Instruction",
        "reason": "Text"
    },
    "Less": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Metadata": {
        "map": "BTreeMap<Text,Value>"
    },
    "MintBox": {
        "object": "EvaluatesTo",
        "destinationId": "EvaluatesTo"
    },
    "Mod": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Multiply": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "NewAccount": {
        "id": "AccountId",
        "signatories": "Vec<PublicKey>",
        "metadata": "Metadata"
    },
    "Not": {
        "expression": "EvaluatesTo"
    },
    "NotPermittedFail": {
        "reason": "Text"
    },
    "Or": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Pair": {
        "leftInstruction": "Instruction",
        "rightInstruction": "Instruction"
    },
    "Parameter": {
        "_enum": {
            "MaximumFaultyPeersAmount": "u32",
            "BlockTime": "u128",
            "CommitTime": "u128",
            "TransactionReceiptTime": "u128"
        }
    },
    "Payload": {
        "accountId": "AccountId",
        "instructions": "Vec<Instruction>",
        "creationTime": "u64",
        "timeToLiveMs": "u64",
        "metadata": "BTreeMap<Text,Value>"
    },
    "Peer": {
        "id": "PeerId"
    },
    "PeerId": {
        "address": "Text",
        "publicKey": "PublicKey"
    },
    "PermissionToken": {
        "name": "Text",
        "params": "BTreeMap<Text,Value>"
    },
    "PipelineEvent": {
        "entityType": "EntityType",
        "status": "Status",
        "hash": "Hash"
    },
    "PipelineEventFilter": {
        "entity": "Option<EntityType>",
        "hash": "Option<Hash>"
    },
    "PublicKey": {
        "digestFunction": "Text",
        "payload": "Bytes"
    },
    "QueryBox": {
        "_enum": {
            "FindAllAccounts": "FindAllAccounts",
            "FindAccountById": "FindAccountById",
            "FindAccountKeyValueByIdAndKey": "FindAccountKeyValueByIdAndKey",
            "FindAccountsByName": "FindAccountsByName",
            "FindAccountsByDomainName": "FindAccountsByDomainName",
            "FindAllAssets": "FindAllAssets",
            "FindAllAssetsDefinitions": "FindAllAssetsDefinitions",
            "FindAssetById": "FindAssetById",
            "FindAssetsByName": "FindAssetsByName",
            "FindAssetsByAccountId": "FindAssetsByAccountId",
            "FindAssetsByAssetDefinitionId": "FindAssetsByAssetDefinitionId",
            "FindAssetsByDomainName": "FindAssetsByDomainName",
            "FindAssetsByAccountIdAndAssetDefinitionId": "FindAssetsByAccountIdAndAssetDefinitionId",
            "FindAssetsByDomainNameAndAssetDefinitionId": "FindAssetsByDomainNameAndAssetDefinitionId",
            "FindAssetQuantityById": "FindAssetQuantityById",
            "FindAssetKeyValueByIdAndKey": "FindAssetKeyValueByIdAndKey",
            "FindAllDomains": "FindAllDomains",
            "FindDomainByName": "FindDomainByName",
            "FindAllPeers": "FindAllPeers",
            "FindTransactionsByAccountId": "FindTransactionsByAccountId",
            "FindPermissionTokensByAccountId": "FindPermissionTokensByAccountId"
        }
    },
    "QueryResult": "Value",
    "RaiseTo": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "RegisterBox": {
        "object": "EvaluatesTo"
    },
    "RejectedTransaction": {
        "payload": "Payload",
        "signatures": "Vec<Signature>",
        "rejectionReason": "TransactionRejectionReason"
    },
    "RejectionReason": {
        "_enum": {
            "Block": "BlockRejectionReason",
            "Transaction": "TransactionRejectionReason"
        }
    },
    "RemoveKeyValueBox": {
        "objectId": "EvaluatesTo",
        "key": "EvaluatesTo"
    },
    "SequenceBox": {
        "instructions": "Vec<Instruction>"
    },
    "SetKeyValueBox": {
        "objectId": "EvaluatesTo",
        "key": "EvaluatesTo",
        "value": "EvaluatesTo"
    },
    "Signature": {
        "publicKey": "PublicKey",
        "signature": "Bytes"
    },
    "SignatureCheckCondition": "EvaluatesTo",
    "SignatureVerificationFail": {
        "signature": "Signature",
        "reason": "Text"
    },
    "SignedQueryRequest": {
        "timestampMs": "Compact<u128>",
        "signature": "Signature",
        "query": "QueryBox"
    },
    "Status": {
        "_enum": {
            "Validating": null,
            "Rejected": "RejectionReason",
            "Committed": null
        }
    },
    "SubscriptionRequest": "EventFilter",
    "Subtract": {
        "left": "EvaluatesTo",
        "right": "EvaluatesTo"
    },
    "Transaction": {
        "payload": "Payload",
        "signatures": "Vec<Signature>"
    },
    "TransactionRejectionReason": {
        "_enum": {
            "NotPermitted": "NotPermittedFail",
            "UnsatisfiedSignatureCondition": "UnsatisfiedSignatureConditionFail",
            "InstructionExecution": "InstructionExecutionFail",
            "SignatureVerification": "SignatureVerificationFail",
            "UnexpectedGenesisAccountSignature": null
        }
    },
    "TransactionValue": {
        "_enum": {
            "Transaction": "VersionedTransaction",
            "RejectedTransaction": "VersionedRejectedTransaction"
        }
    },
    "TransferBox": {
        "sourceId": "EvaluatesTo",
        "object": "EvaluatesTo",
        "destinationId": "EvaluatesTo"
    },
    "UnregisterBox": {
        "objectId": "EvaluatesTo"
    },
    "UnsatisfiedSignatureConditionFail": {
        "reason": "Text"
    },
    "Value": {
        "_enum": {
            "U32": "u32",
            "Bool": "bool",
            "String": "Text",
            "Vec": "Vec<Value>",
            "Id": "IdBox",
            "Identifiable": "IdentifiableBox",
            "PublicKey": "PublicKey",
            "Parameter": "Parameter",
            "SignatureCheckCondition": "SignatureCheckCondition",
            "TransactionValue": "TransactionValue",
            "PermissionToken": "PermissionToken"
        }
    },
    "VersionedEventSocketMessage": {
        "_enum": {
            "V1": "_VersionedEventSocketMessageV1"
        }
    },
    "VersionedQueryResult": {
        "_enum": {
            "STUB_TO_FILL_DISCRIMINANT_0": null,
            "V1": "_VersionedQueryResultV1"
        }
    },
    "VersionedRejectedTransaction": {
        "_enum": {
            "STUB_TO_FILL_DISCRIMINANT_0": null,
            "V1": "_VersionedRejectedTransactionV1"
        }
    },
    "VersionedSignedQueryRequest": {
        "_enum": {
            "STUB_TO_FILL_DISCRIMINANT_0": null,
            "V1": "_VersionedSignedQueryRequestV1"
        }
    },
    "VersionedTransaction": {
        "_enum": {
            "STUB_TO_FILL_DISCRIMINANT_0": null,
            "V1": "_VersionedTransactionV1"
        }
    },
    "Where": {
        "expression": "EvaluatesTo",
        "values": "BTreeMap<Text,EvaluatesTo>"
    }
}
